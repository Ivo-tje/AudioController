blueprint:
  name: AudioController
  description: Setup AudioController for room
  author: Ivo Schooneman
  domain: automation
  input:
    ac_device:
      name: Audio controller device
      selector:
        device:
          filter:
            - integration: esphome
              manufacturer: Ivo-tje
    media_player:
      name: Media player or group
      selector:
        entity:
          domain: media_player

variables:
  audiocontroller_id: !input ac_device
  reader: '{{ device_attr(audiocontroller_id, "name") }}'
  audiocontroller_entities: '{{ device_entities(audiocontroller_id) }}'
  volume_knob: >
    {{
      audiocontroller_entities | select("search", "sensor.volume_knob") | list | last
    }}
  play_pause: >
   {{
      audiocontroller_entities | select("search", "sensor.play_pause") | list | last
    }}
  next_button: >
   {{
      audiocontroller_entities | select("search", "sensor.next") | list | last
    }}
  previous_button: >
    {{
      audiocontroller_entities | select("search", "sensor.previous") | list | last
    }}

trigger:
- platform: event
  event_type: esphome.music_tag
- platform: template
  entity_id: sensor.volume_knob
  id: Volume
- platform: state
  entity_id: '{{ play_pause }}'
  id: Play
  from: 'on'
- platform: state
  entity_id: '{{ next_button }}'
  id: Next
  from: 'on'
- platform: state
  entity_id: '{{ previous_button }}'
  id: Previous
  from: 'on'
condition:
  - condition: template
    value_template: '{{ trigger.event.data.reader == reader }}'
action:
- choose:
  - conditions:
    - condition: trigger
      id: Volume
    sequence:
    - service: media_player.volume_set
      data_template:
        volume_level: '{{ trigger.to_state.state | float / 100 }}'
      target:
        entity_id: !input media_player
  - conditions:
    - condition: trigger
      id: Play
    sequence:
    - service: media_player.media_play_pause
      data: {}
      target:
        entity_id: !input media_player
  - conditions:
    - condition: trigger
      id: Next
    sequence:
    - service: media_player.media_next_track
      data: {}
      target:
        entity_id: !input media_player
  - conditions:
    - condition: trigger
      id: Previous
    sequence:
    - service: media_player.media_previous_track
      data: {}
      target:
        entity_id: !input media_player
  - service: media_player.media_stop
    target:
      entity_id: !input player
  - choose:
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.source == "sonos" }}'
        sequence:
          - service: media_player.select_source
            data:
              source: '{{ trigger.event.data.info }}'
            target:
              entity_id: !input player
    default:
      - service: media_player.play_media
        data:
          media_content_type: music
          media_content_id: '{{ trigger.event.data.url }}'
        target:
          entity_id: !input media_player
mode: queued
max: 10
